"""
Django settings for Education project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import django_heroku
import mongoengine
from datetime import timedelta
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'u4h+3#az(g2$ipot_^1+052ux%4ff1zl0%nkfwqkjp_g1i+p1_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
# - fix an App structure .Make it modular.
# -add New Test functionality DRrestFramework (TestApp).(All functionalities:CRUD).
# -Try Slowly turn code to DRF every app .
# -try to add async functions to code in parts where asyncronous responses needed


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts.apps.AccountsConfig',
    'main.apps.MainConfig',
    'teacher.apps.TeacherConfig',
    'schools.apps.SchoolsConfig',
    'student.apps.StudentConfig',
    'django_cleanup',
    'corsheaders',
    'testapp',
    'mongoengine',
    'rest_framework',
    'django_mongoengine',
    'rest_framework_mongoengine',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Education.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# SITE_ID = 1
# USE_I18N = True


WSGI_APPLICATION = 'Education.wsgi.application'

# MONGO_USER = 'admin'
# MONGO_PASS = 'limonlinkrustam777'
# MONGO_DATABASE_NAME = 'EDUPROTEST'
# MONGO_HOST = 'mongodb://localhost:27017/EDUPROTEST'

# mongoengine.connect(db=MONGO_DATABASE_NAME,host=MONGO_HOST)
# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases
MONGO_DATABASE_NAME = 'EDUPROTEST'
SESSION_ENGINE = 'mongoengine.django.sessions'
mongoengine.connect(name=MONGO_DATABASE_NAME, host='localhost:27017')
AUTHENTICATION_BACKENDS = ('mongoengine.django.auth.MongoEngineBackend',)


MONGODB_DATABASES = {
    'testdb': {
        'name': 'EDUPROTEST',
        'host': 'mongodb://localhost:27017/EDUPROTEST',
        'port':21017,
        'tz_aware': True, # if you using timezones in django (USE_TZ = True)
    }
}


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME':'EDUPRO',
        'USER':'postgres',
        'PASSWORD':'limonlink',
        'HOST':'localhost',
        'PORT':5432,       
    },
    'testdb': {
        'ENGINE':'djongo',
        'name': 'EDUPROTEST',
        'host': 'mongodb://localhost:27017/EDUPROTEST',
        'port':21017,
        'tz_aware': True, # if you using timezones in django (USE_TZ = True)
    },
}

DATABASE_ROUTERS = ['dbrouters.routers.MongoDBRouter']



SESSION_ENGINE = 'django_mongoengine.sessions'
SESSION_SERIALIZER = 'django_mongoengine.sessions.BSONSerializer'
# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 1,
}


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'ru-Ru'

TIME_ZONE = 'Asia/Tashkent'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'), )


MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'


django_heroku.settings(locals())